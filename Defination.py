def Defination(i):
    if i=='NOP': print('Number of Particles')
    if i=='MNIt':  print('number of maximum iteration')
    if i=='VN': print('The name of each variable (For SWAT the name of parameters should come along with the filtering landuse or subasin number)')
    if i=='NV': print('Number of variables involved in the calibration')
    if i=='Parameter': print('The initial value for the variables (it will be passed to the first particle for the first iteration)')
    if i=='SG': print('Streamflow group in the objective function')
    if i=='BG': print('baseflow group in the objective function')
    if i=='HG': print('Head group in the objective function')
    if i=='NO3G': print('NO3 group in the objective function')
    if i=='SON' : print('Name of Streamflow observation file')
    if i=='BON' : print('Name of baseflow observation file')
    if i=='HON': print('Name of Head observation file')
    if i=='NON': print('Name of NO3 observation file')
    if i=='SOB': print('The number of subbasin that the simulated Streamflow is within it')
    if i=='BOB': print('The number of subbasin that the simulated baseflow is within it')
    if i=='NOB': print('The number of subbasin that the simulated Head is within it')
    if i=='HOC': print('The column in swatmf_out_MF_obs that the simulated file will be written.') 
    if i=='SW': print('The weight of the stramflow observation in the objective function')
    if i=='BW': print('The weight of the Baseflow observation in the objective function')
    if i=='HW': print('The weight of the Head observation in the objective function')
    if i=='NW': print('The weight of the Nitrate observation in the objective function')
    if i=='SMO': print('The method (NSE or KGE or R2) used for the streamflow observation in objective function  in calibration')
    if i=='BMO': print('The method (NSE or KGE or R2) used for the Baseflow observation in objective function  in calibration')
    if i=='HMO': print('The method (NSE or KGE or R2) used for the Head observation in objective function  in calibration')
    if i=='NMO': print('The method (NSE or KGE or R2) used for the Nitrate observation in objective function  in calibration')
    if i=='KGEW1': print('the weight of KGE(1/Q)')
    if i=='KGEW2': print('the weight of KGE(Q)')
    if i=='HON': print('Name of the head observation file')
    if i=='NON': print('Name of the Nitrate concentration observation file')
    if i=='MinB': print('Maximum boundary of the range of the variable')
    if i=='MaxB': print('Minimum boundary of the range of the variable')
    if i=='NSD': print('number of simulation days (excluding warm up period)')
    if i=='NOW': print('number of warm up days')
    if i=='NSY': print('number of years of simulations')
    if i=='BYS': print('begining year of simulation')    
    if i=='BJDS': print('begnining Julian day of simulation')  
    if i=='EJDS': print('Ending Julian day of simulation')  
    if i=='SDate':print('Starting date of simulation (Begining date + skipped steps/warm up period)')  
    if i=='BDate': print('Begining date of simulation (Begining date including warm up period)')  
    if i=='DM': print('Directory of SWAT-MODFLOW model')
    if i=='DP': print('Directory for storing particles')
    if i=='unq': print('Permutation of solutions')
    if i=='C1I': print('initial value of C1 (convergance to global solution)')
    if i=='C1F': print('final value of C1') 
    if i=='C2I':print('Initial value of C2 (Convergance to Local solution)')
    if i=='C2F': print('Final value of C2')
    if i=='RC': print('Chance of random selection') 
    if i=='NG': print('Number of group')
    if i=='AbsMin': print('Absolute lower range of a variable')
    if i=='AbsMax': print('Absolute upper range of a variable')
    if i=='DBM': print('Directory of the baseflow model')
    if i=='DRR': print('Directory of saving results')
    if i=='VNum': print('Variable number (The first col in Parameter_input.txt file)')
    if i=='Grouping': print('a vector containing the group number of all variable (the fourth col in Parameter_input.txt file )')
    if i=='FileName': print('a simbol for addressing the file that a parameter belongs to. for aquifer parameters in MODFLOW model this name should be Pval, for river parameters in the MODFLOW it should be M_River, for SWAT model parameters it should be SWAT_par, for RCT file in RT3D it should be RCT_par, for DSP file of RT3D it should be Dsp_par, for BTN file in RT3D it should be BTN_par')